<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>validate file</name>
    <description>Validate one xml file, save reports. To be used as sub-transformation only.</description>
    <extended_description>Copyright 2020 EUROPEAN UNION  
Licensed under the EUPL, Version 1.2 or - as soon as they will be approved by 
the European Commission - subsequent versions of the EUPL (the "Licence").  
You may not use this work except in compliance with the Licence.  
You may obtain a copy of the Licence at:

https://ec.europa.eu/isa2/solutions/european-union-public-licence-eupl_en

Unless required by applicable law or agreed to in writing, software 
distributed under the Licence is distributed on an "AS IS" basis, 
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the Licence for the specific language governing permissions and 
limitations under the Licence.

Date: 2020/06/08  
Authors: 
European Commission, Joint Research Centre - jrc-inspire-support@ec.europa.eu

This work was supported by the Interoperability solutions for public 
administrations, businesses and citizens programme (http://ec.europa.eu/isa2)
through Action 2016.10: 
European Location Interoperability Solutions for e-Government (ELISE)
</extended_description>
    <trans_version/>
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>/</directory>
    <parameters>
      <parameter>
        <name>CC1</name>
        <default_value>EIDe4a95862-9cc9-436b-9fdd-a0115d342350</default_value>
        <description>TestSuide id for dataset/series baseline</description>
      </parameter>
      <parameter>
        <name>CC2</name>
        <default_value>EID2be1480a-fe42-40b2-9420-eb0e69385c80</default_value>
        <description>TestSuide id for dataset/series interoperability</description>
      </parameter>
      <parameter>
        <name>CC3</name>
        <default_value>EID8f869e23-c9e9-4e86-8dca-be30ff421229</default_value>
        <description/>
      </parameter>
      <parameter>
        <name>CC4</name>
        <default_value>EID606587df-65a8-4b7b-9eee-e0d94daaa42a</default_value>
        <description>TestSuide id for service</description>
      </parameter>
      <parameter>
        <name>CC5</name>
        <default_value>EID8db54d8a-8578-4959-b891-5394d9f53a28</default_value>
        <description/>
      </parameter>
      <parameter>
        <name>CCinspire</name>
        <default_value>EIDec7323d5-d8f0-4cfe-b23a-b826df86d58c</default_value>
        <description>TestSuide id for TG MD 1.3</description>
      </parameter>
      <parameter>
        <name>get_result_1_delay</name>
        <default_value>100</default_value>
        <description>Delay in seconds between test launch and first get result request</description>
      </parameter>
      <parameter>
        <name>get_result_2_delay</name>
        <default_value>1000</default_value>
        <description>Delay in seconds between test launch and second get result request</description>
      </parameter>
      <parameter>
        <name>progress_path</name>
        <default_value>TestRuns?view=progress</default_value>
        <description/>
      </parameter>
      <parameter>
        <name>queue_check_delay</name>
        <default_value>2</default_value>
        <description>Delay in seconds between queue checks</description>
      </parameter>
      <parameter>
        <name>queue_max_size</name>
        <default_value>4</default_value>
        <description>Maximum number of test runs that can be run in parallel on one validator node</description>
      </parameter>
      <parameter>
        <name>test_path</name>
        <default_value>TestRuns</default_value>
        <description/>
      </parameter>
      <parameter>
        <name>testobjects_path</name>
        <default_value>TestObjects</default_value>
        <description/>
      </parameter>
      <parameter>
        <name>upload_path</name>
        <default_value>TestObjects?action=upload</default_value>
        <description/>
      </parameter>
    </parameters>
    <log>
      <trans-log-table>
        <connection/>
        <schema/>
        <table/>
        <size_limit_lines/>
        <interval/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STATUS</id>
          <enabled>Y</enabled>
          <name>STATUS</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
          <subject/>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
          <subject/>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
          <subject/>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
          <subject/>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
          <subject/>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
          <subject/>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>STARTDATE</id>
          <enabled>Y</enabled>
          <name>STARTDATE</name>
        </field>
        <field>
          <id>ENDDATE</id>
          <enabled>Y</enabled>
          <name>ENDDATE</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>DEPDATE</id>
          <enabled>Y</enabled>
          <name>DEPDATE</name>
        </field>
        <field>
          <id>REPLAYDATE</id>
          <enabled>Y</enabled>
          <name>REPLAYDATE</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>Y</enabled>
          <name>LOG_FIELD</name>
        </field>
        <field>
          <id>EXECUTING_SERVER</id>
          <enabled>N</enabled>
          <name>EXECUTING_SERVER</name>
        </field>
        <field>
          <id>EXECUTING_USER</id>
          <enabled>N</enabled>
          <name>EXECUTING_USER</name>
        </field>
        <field>
          <id>CLIENT</id>
          <enabled>N</enabled>
          <name>CLIENT</name>
        </field>
      </trans-log-table>
      <perf-log-table>
        <connection/>
        <schema/>
        <table/>
        <interval/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>SEQ_NR</id>
          <enabled>Y</enabled>
          <name>SEQ_NR</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>INPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>INPUT_BUFFER_ROWS</name>
        </field>
        <field>
          <id>OUTPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>OUTPUT_BUFFER_ROWS</name>
        </field>
      </perf-log-table>
      <channel-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>LOGGING_OBJECT_TYPE</id>
          <enabled>Y</enabled>
          <name>LOGGING_OBJECT_TYPE</name>
        </field>
        <field>
          <id>OBJECT_NAME</id>
          <enabled>Y</enabled>
          <name>OBJECT_NAME</name>
        </field>
        <field>
          <id>OBJECT_COPY</id>
          <enabled>Y</enabled>
          <name>OBJECT_COPY</name>
        </field>
        <field>
          <id>REPOSITORY_DIRECTORY</id>
          <enabled>Y</enabled>
          <name>REPOSITORY_DIRECTORY</name>
        </field>
        <field>
          <id>FILENAME</id>
          <enabled>Y</enabled>
          <name>FILENAME</name>
        </field>
        <field>
          <id>OBJECT_ID</id>
          <enabled>Y</enabled>
          <name>OBJECT_ID</name>
        </field>
        <field>
          <id>OBJECT_REVISION</id>
          <enabled>Y</enabled>
          <name>OBJECT_REVISION</name>
        </field>
        <field>
          <id>PARENT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>PARENT_CHANNEL_ID</name>
        </field>
        <field>
          <id>ROOT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>ROOT_CHANNEL_ID</name>
        </field>
      </channel-log-table>
      <step-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>N</enabled>
          <name>LOG_FIELD</name>
        </field>
      </step-log-table>
      <metrics-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>METRICS_DATE</id>
          <enabled>Y</enabled>
          <name>METRICS_DATE</name>
        </field>
        <field>
          <id>METRICS_CODE</id>
          <enabled>Y</enabled>
          <name>METRICS_CODE</name>
        </field>
        <field>
          <id>METRICS_DESCRIPTION</id>
          <enabled>Y</enabled>
          <name>METRICS_DESCRIPTION</name>
        </field>
        <field>
          <id>METRICS_SUBJECT</id>
          <enabled>Y</enabled>
          <name>METRICS_SUBJECT</name>
        </field>
        <field>
          <id>METRICS_TYPE</id>
          <enabled>Y</enabled>
          <name>METRICS_TYPE</name>
        </field>
        <field>
          <id>METRICS_VALUE</id>
          <enabled>Y</enabled>
          <name>METRICS_VALUE</name>
        </field>
      </metrics-log-table>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
    <created_user>-</created_user>
    <created_date>2020/01/07 16:31:48.434</created_date>
    <modified_user>-</modified_user>
    <modified_date>2020/01/07 16:31:48.434</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
    <notepad>
      <note>GET</note>
      <xloc>448</xloc>
      <yloc>80</yloc>
      <width>41</width>
      <heigth>34</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>POST</note>
      <xloc>576</xloc>
      <yloc>192</yloc>
      <width>54</width>
      <heigth>34</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>POST</note>
      <xloc>752</xloc>
      <yloc>224</yloc>
      <width>54</width>
      <heigth>34</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>GET</note>
      <xloc>704</xloc>
      <yloc>384</yloc>
      <width>41</width>
      <heigth>34</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>GET</note>
      <xloc>448</xloc>
      <yloc>480</yloc>
      <width>41</width>
      <heigth>34</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>GET</note>
      <xloc>384</xloc>
      <yloc>384</yloc>
      <width>41</width>
      <heigth>34</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <order>
    <hop>
      <from>test completed?</from>
      <to>remove fields 2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>upload</from>
      <to>Dummy 1</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>run test</from>
      <to>Dummy 2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>remove fields</from>
      <to>Mapping output</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>get html</from>
      <to>Dummy 3</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>test completed?</from>
      <to>get html</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>save json</from>
      <to>save html</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>run test</from>
      <to>get run id</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>test</from>
      <to>test id, out path</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>upload</from>
      <to>get upload id</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>save html</from>
      <to>remove fields</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>make test json</from>
      <to>run test</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Mapping input</from>
      <to>test</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>get run id</from>
      <to>get result 1</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>get result 1</from>
      <to>test completed?</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>remove fields 2</from>
      <to>get result 2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>get result 2</from>
      <to>get html</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>get upload id</from>
      <to>make test json</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>check queue</from>
      <to>upload</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>test id, out path</from>
      <to>check queue</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>get html</from>
      <to>save json</to>
      <enabled>Y</enabled>
    </hop>
  </order>
  <step>
    <name>Dummy 1</name>
    <type>Dummy</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>576</xloc>
      <yloc>32</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Dummy 2</name>
    <type>Dummy</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>928</xloc>
      <yloc>224</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Dummy 3</name>
    <type>Dummy</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>448</xloc>
      <yloc>224</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Mapping input</name>
    <type>MappingInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <name>filename</name>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>md_id</name>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>other</name>
        <type>Boolean</type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>type</name>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>file_id</name>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <select_unspecified>N</select_unspecified>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>64</xloc>
      <yloc>128</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Mapping output</name>
    <type>MappingOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>64</xloc>
      <yloc>416</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>check queue</name>
    <type>UserDefinedJavaClass</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <definitions>
      <definition>
        <class_type>TRANSFORM_CLASS</class_type>
        <class_name>Processor</class_name>
        <class_source>
import inspire.validator.Queue;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.util.EntityUtils;

public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException
{
	Object[] r = getRow();

	if (r == null) {
		setOutputDone();
		return false;
	}

	r = createOutputRow(r, data.outputRowMeta.size());

	int queueNr = Integer.parseInt(getVariable("queue_nr"));
	Queue queue = Queue.get(queueNr);

	String validatorUrl = getVariable("validator_url");
	String progressPath = getVariable("progress_path", "TestRuns?view=progress");

	HttpGet httpGet = new HttpGet(validatorUrl + progressPath);
	httpGet.setConfig(queue.config);

	int queueMaxSize = Integer.parseInt(getVariable("queue_max_size", "4"));
	int queueCheckDelay = Integer.parseInt(getVariable("queue_check_delay", "2"));
	int count = queueMaxSize;
	int delay = 0;
	int errors = 0;
	logDetailed("waiting for queue...");
	do {
		try {
			Thread.sleep(delay * 1000);
			delay = queueCheckDelay;

			logDetailed("Requesting " + httpGet.getRequestLine());
			CloseableHttpResponse response = queue.client.execute(httpGet);
			try {
				logDetailed(response.getStatusLine().toString());
				if (response.getStatusLine().getStatusCode() == 200) {
					String resStr = EntityUtils.toString(response.getEntity());
					count = 0;
					if (!"[]".equals(resStr)) {
						try {
							JSONArray jsonArray = (JSONArray) new JSONParser().parse(resStr);
							//for (JSONObject obj : jsonArray) {
							for (int i = 0; i &lt; jsonArray.size(); i++) {
								JSONObject obj = (JSONObject) jsonArray.get(i);
								if ((Double) obj.get("percentStepsCompleted") &lt; 100) {
									count++;
									obj.get("id");
								}
							}
						} catch (Exception e) {
							logBasic("Response : " + EntityUtils.toString(response.getEntity()));
							logError("Error", e);
						}
					}
					logBasic("queue " + queueNr + " size: " + count);
				}
	
			} finally {
				response.close();
			}
		} catch (Exception e) {
			logError("Error", e);
			delay = 90; // 1.5 minute delay in case of error
			errors++;
		}
		if(errors > 12)
			count = -1;
	} while (!queue.incIfSmaller(queueMaxSize - count));

	logDetailed("...proceeding");

	putRow(data.outputRowMeta, r);

	return true;
}</class_source>
      </definition>
    </definitions>
    <fields>
    </fields>
    <clear_result_fields>N</clear_result_fields>
    <info_steps/>
    <target_steps/>
    <usage_parameters/>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>448</xloc>
      <yloc>128</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>get html</name>
    <type>UserDefinedJavaClass</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <definitions>
      <definition>
        <class_type>TRANSFORM_CLASS</class_type>
        <class_name>Processor</class_name>
        <class_source>import inspire.validator.Queue;
import java.time.Instant;
import org.apache.http.entity.StringEntity;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.util.EntityUtils;

public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException
{
	Object[] r = getRow();

	if (r == null) {
		setOutputDone();
		return false;
	}

	r = createOutputRow(r, data.outputRowMeta.size());

	String validatorUrl = getVariable("validator_url", "http://inspire.ec.europa.eu/validator/v2/");
	String testPath = getVariable("test_path", "TestRuns");

	String runId = get(Fields.In, "run_id").getString(r);
	Long startSeconds = get(Fields.In, "start_seconds").getLong(r);
	String filename = get(Fields.In, "filename").getString(r);

	Queue queue = Queue.get(Integer.parseInt(getVariable("queue_nr")));

	// Http get
	HttpGet httpGet = new HttpGet(validatorUrl + testPath + "/" + runId + ".html");
	httpGet.setConfig(queue.config);

	int tries = 0;
	int maxTries = 2;
	boolean success = false;
	do {
		try {
			logBasic("Get result html for " + filename); 
			if (tries > 0)
				Thread.sleep(30 * 1000);

			logDetailed("Requesting " + httpGet.getRequestLine()); 
			CloseableHttpResponse response = queue.client.execute(httpGet);
			try {
				logDetailed(response.getStatusLine().toString());
				if (response.getStatusLine().getStatusCode() == 200) {
					success = true;
					get(Fields.Out, "response_html").setValue(r, EntityUtils.toString(response.getEntity()));
				} else {
					logBasic("Get result html FAILED:"); 
					logBasic(EntityUtils.toString(response.getEntity()));
					break;
				}
			} finally {
				response.close();
			}
		} catch (Exception e) {
			logError("Error", e);
		}
	} while (!success &amp;&amp; ++tries &lt; maxTries);

	if (success)
		putRow(data.outputRowMeta, r);
	else {
		putError(data.outputRowMeta, r, tries, "Get result html failed", filename, "");
	}

	return true;
}</class_source>
      </definition>
    </definitions>
    <fields>
      <field>
        <field_name>response_html</field_name>
        <field_type>String</field_type>
        <field_length>-1</field_length>
        <field_precision>-1</field_precision>
      </field>
    </fields>
    <clear_result_fields>N</clear_result_fields>
    <info_steps/>
    <target_steps/>
    <usage_parameters/>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>448</xloc>
      <yloc>320</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>get result 1</name>
    <type>SimpleMapping</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <specification_method>filename</specification_method>
    <trans_object_id/>
    <trans_name/>
    <filename>${Internal.Entry.Current.Directory}/get_result_sub.ktr</filename>
    <directory_path/>
    <mappings>
      <input>
        <mapping>
          <input_step/>
          <output_step/>
          <main_path>Y</main_path>
          <rename_on_output>Y</rename_on_output>
          <description/>
        </mapping>
      </input>
      <output>
        <mapping>
          <input_step/>
          <output_step/>
          <main_path>Y</main_path>
          <rename_on_output>N</rename_on_output>
          <description/>
        </mapping>
      </output>
      <parameters>
        <variablemapping>
          <variable>delay</variable>
          <input>${get_result_1_delay}</input>
        </variablemapping>
        <inherit_all_vars>Y</inherit_all_vars>
      </parameters>
    </mappings>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>704</xloc>
      <yloc>320</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>get result 2</name>
    <type>SimpleMapping</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <specification_method>filename</specification_method>
    <trans_object_id/>
    <trans_name/>
    <filename>${Internal.Entry.Current.Directory}/get_result_sub.ktr</filename>
    <directory_path/>
    <mappings>
      <input>
        <mapping>
          <input_step/>
          <output_step/>
          <main_path>Y</main_path>
          <rename_on_output>Y</rename_on_output>
          <description/>
        </mapping>
      </input>
      <output>
        <mapping>
          <input_step/>
          <output_step/>
          <main_path>Y</main_path>
          <rename_on_output>N</rename_on_output>
          <description/>
        </mapping>
      </output>
      <parameters>
        <variablemapping>
          <variable>delay</variable>
          <input>${get_result_2_delay}</input>
        </variablemapping>
        <inherit_all_vars>Y</inherit_all_vars>
      </parameters>
    </mappings>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>448</xloc>
      <yloc>416</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>get run id</name>
    <type>JsonInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <include>N</include>
    <include_field/>
    <rownum>N</rownum>
    <addresultfile>N</addresultfile>
    <readurl>N</readurl>
    <removeSourceField>Y</removeSourceField>
    <IsIgnoreEmptyFile>N</IsIgnoreEmptyFile>
    <doNotFailIfNoFile>Y</doNotFailIfNoFile>
    <ignoreMissingPath>Y</ignoreMissingPath>
    <defaultPathLeafToNull>Y</defaultPathLeafToNull>
    <rownum_field/>
    <file>
      <name/>
      <filemask/>
      <exclude_filemask/>
      <file_required>N</file_required>
      <include_subfolders>N</include_subfolders>
    </file>
    <fields>
      <field>
        <name>run_id</name>
        <path>$.EtfItemCollection.testRuns.TestRun.id</path>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
    </fields>
    <limit>0</limit>
    <IsInFields>Y</IsInFields>
    <IsAFile>N</IsAFile>
    <valueField>response</valueField>
    <shortFileFieldName/>
    <pathFieldName/>
    <hiddenFieldName/>
    <lastModificationTimeFieldName/>
    <uriNameFieldName/>
    <rootUriNameFieldName/>
    <extensionFieldName/>
    <sizeFieldName/>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>832</xloc>
      <yloc>320</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>get upload id</name>
    <type>JsonInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <include>N</include>
    <include_field/>
    <rownum>N</rownum>
    <addresultfile>N</addresultfile>
    <readurl>N</readurl>
    <removeSourceField>Y</removeSourceField>
    <IsIgnoreEmptyFile>N</IsIgnoreEmptyFile>
    <doNotFailIfNoFile>Y</doNotFailIfNoFile>
    <ignoreMissingPath>Y</ignoreMissingPath>
    <defaultPathLeafToNull>Y</defaultPathLeafToNull>
    <rownum_field/>
    <file>
      <name/>
      <filemask/>
      <exclude_filemask/>
      <file_required>N</file_required>
      <include_subfolders>N</include_subfolders>
    </file>
    <fields>
      <field>
        <name>upload_id</name>
        <path>$.testObject.id</path>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
    </fields>
    <limit>0</limit>
    <IsInFields>Y</IsInFields>
    <IsAFile>N</IsAFile>
    <valueField>response</valueField>
    <shortFileFieldName/>
    <pathFieldName/>
    <hiddenFieldName/>
    <lastModificationTimeFieldName/>
    <uriNameFieldName/>
    <rootUriNameFieldName/>
    <extensionFieldName/>
    <sizeFieldName/>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>704</xloc>
      <yloc>128</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>inititialize</name>
    <type>UserDefinedJavaClass</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <definitions>
      <definition>
        <class_type>TRANSFORM_CLASS</class_type>
        <class_name>Processor</class_name>
        <class_source>import inspire.validator.Queue;
import org.apache.http.HttpHost;
import org.apache.http.auth.AuthScope;
import org.apache.http.auth.UsernamePasswordCredentials;
import org.apache.http.client.CredentialsProvider;
import org.apache.http.client.config.RequestConfig;
import org.apache.http.impl.client.BasicCredentialsProvider;
import org.apache.http.impl.client.HttpClients;

public boolean init(StepMetaInterface stepMetaInterface, StepDataInterface stepDataInterface) {
	int queueNr = Integer.parseInt(getVariable("queue_nr"));

    logBasic("Initializing queue " + queueNr);

	Queue queue = Queue.init(queueNr);

	String proxyHost = getVariable("http.proxyHost", "");
	int proxyPort = Integer.parseInt(getVariable("http.proxyPort", "-1"));
	String proxyUser = getVariable("http.proxyUser", "");
	String proxyPassword = getVariable("http.proxyPassword", "");

	// Setup Proxy and Proxy Credentials
	CredentialsProvider credsProvider = new BasicCredentialsProvider();
	HttpHost proxy = null;

	if (!proxyHost.equals("")) {
		proxy = new HttpHost(proxyHost, proxyPort);

		if (!proxyUser.equals("")) {
			credsProvider.setCredentials(
				new AuthScope(proxyHost, proxyPort),
				new UsernamePasswordCredentials(proxyUser, proxyPassword)
			);
		}
	}

	queue.client = HttpClients
		.custom()
		.setDefaultCredentialsProvider(credsProvider)
		.build();

	RequestConfig.Builder reqConfigBuilder = RequestConfig.custom();
	if (proxy != null) {
		reqConfigBuilder.setProxy(proxy);
	}

	queue.config = reqConfigBuilder.build();

	return parent.initImpl(stepMetaInterface, stepDataInterface);
}

public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException {
    setOutputDone();
    return false;
}

</class_source>
      </definition>
    </definitions>
    <fields>
    </fields>
    <clear_result_fields>N</clear_result_fields>
    <info_steps/>
    <target_steps/>
    <usage_parameters/>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>64</xloc>
      <yloc>32</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>make test json</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>var test_args = JSON.stringify({
   "label": "Metadata test for " + md_id,
   "executableTestSuiteIds": test_id.split(","),
   "arguments": {
      "files_to_test": ".*",
      "tests_to_execute": ".*"
   },
   "testObject": {
      "id": upload_id
   }
});</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>test_args</name>
        <rename>test_args</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>832</xloc>
      <yloc>128</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>remove fields</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <select_unspecified>N</select_unspecified>
      <remove>
        <name>test_name</name>
      </remove>
      <remove>
        <name>test_id</name>
      </remove>
      <remove>
        <name>test_args</name>
      </remove>
      <remove>
        <name>start_seconds</name>
      </remove>
      <remove>
        <name>upload_id</name>
      </remove>
      <remove>
        <name>run_id</name>
      </remove>
      <remove>
        <name>response_html</name>
      </remove>
      <remove>
        <name>response</name>
      </remove>
      <remove>
        <name>out_path</name>
      </remove>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>64</xloc>
      <yloc>320</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>remove fields 2</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <select_unspecified>N</select_unspecified>
      <remove>
        <name>response</name>
      </remove>
      <remove>
        <name>test_status</name>
      </remove>
      <remove>
        <name>errors</name>
      </remove>
      <remove>
        <name>error_count</name>
      </remove>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>576</xloc>
      <yloc>416</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>run test</name>
    <type>UserDefinedJavaClass</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <definitions>
      <definition>
        <class_type>TRANSFORM_CLASS</class_type>
        <class_name>Processor</class_name>
        <class_source>import inspire.validator.Queue;
import java.time.Instant;

import org.apache.http.entity.StringEntity;
import org.apache.http.entity.ContentType;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.util.EntityUtils;
import org.apache.http.HttpHeaders;

public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException
{
	Object[] r = getRow();

	if (r == null) {
		setOutputDone();
		return false;
	}

	r = createOutputRow(r, data.outputRowMeta.size());

	Queue queue = Queue.get(Integer.parseInt(getVariable("queue_nr")));

	String validatorUrl = getVariable("validator_url", "http://inspire.ec.europa.eu/validator/v2/");
	String testPath = getVariable("test_path", "TestRuns");
	String authToken = getVariable("authorization_token");
	
	String testArgs = get(Fields.In, "test_args").getString(r);
	String filename = get(Fields.In, "filename").getString(r);

	// Http post
	HttpPost httpPost = new HttpPost(validatorUrl + testPath);
	httpPost.setConfig(queue.config);
	if (authToken != null)
		httpPost.setHeader(HttpHeaders.AUTHORIZATION, authToken);
	try {
		httpPost.setEntity(new StringEntity(testArgs, ContentType.APPLICATION_JSON));
	} catch (Exception e) {
		logError("Error", e);
	}

	/*	Uploads are deleted after 5 minutes from the server, 
		so in order not to block test launching for next records
		and not to let the launched tests pile up!
		retries need to be limited. */
	int tries = 0;
	boolean success = false;
	do {
		try {
			// Delay 10 seconds only see comment above
			if (tries > 0)
				Thread.sleep(10 * 1000);

			logBasic("Launching test for " + filename); 
			logDetailed("Requesting " + httpPost.getRequestLine()); 
			CloseableHttpResponse response = queue.client.execute(httpPost);
			try {
				logDetailed(response.getStatusLine().toString());
				if (response.getStatusLine().getStatusCode() == 201) {
					success = true;
					get(Fields.Out, "response").setValue(r, EntityUtils.toString(response.getEntity()));
					get(Fields.Out, "start_seconds").setValue(r, Instant.now().getEpochSecond());
				} else {
					logBasic("Launch FAILED:"); 
					logBasic(EntityUtils.toString(response.getEntity()));
				}
			} finally {
				response.close();
			}
		} catch (Exception e) {
			logError("Error", e);
		}
	} while (!success &amp;&amp; tries++ &lt; 1); // 1 retry only see comment above

	queue.decrement();

	if (success)
		putRow(data.outputRowMeta, r);
	else {
		putError(data.outputRowMeta, r, tries, "Test launch failed", filename, "");
	}

	return true;
}</class_source>
      </definition>
    </definitions>
    <fields>
      <field>
        <field_name>response</field_name>
        <field_type>String</field_type>
        <field_length>-1</field_length>
        <field_precision>-1</field_precision>
      </field>
      <field>
        <field_name>start_seconds</field_name>
        <field_type>Integer</field_type>
        <field_length>-1</field_length>
        <field_precision>-1</field_precision>
      </field>
    </fields>
    <clear_result_fields>N</clear_result_fields>
    <info_steps/>
    <target_steps/>
    <usage_parameters/>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>832</xloc>
      <yloc>224</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>save html</name>
    <type>TextFileOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <separator/>
    <enclosure/>
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>N</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding>windows-1252</encoding>
    <endedLine/>
    <fileNameInField>Y</fileNameInField>
    <fileNameField>out_path</fileNameField>
    <create_parent_folder>Y</create_parent_folder>
    <file>
      <name>file</name>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>Y</do_not_open_new_file_init>
      <extention>html</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format/>
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery>0</splitevery>
    </file>
    <fields>
      <field>
        <name>response_html</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>192</xloc>
      <yloc>320</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>save json</name>
    <type>TextFileOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <separator/>
    <enclosure/>
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>N</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding>windows-1252</encoding>
    <endedLine/>
    <fileNameInField>Y</fileNameInField>
    <fileNameField>out_path</fileNameField>
    <create_parent_folder>Y</create_parent_folder>
    <file>
      <name>file</name>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>Y</do_not_open_new_file_init>
      <extention>json</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format/>
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery>0</splitevery>
    </file>
    <fields>
      <field>
        <name>response</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>320</xloc>
      <yloc>320</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>test</name>
    <type>Janino</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <formula>
      <field_name>test_name</field_name>
      <formula_string>type.equals("service") ? (other ? "${service_other_cc}" : "${service_cc}") : "${dataset_cc}"</formula_string>
      <value_type>String</value_type>
      <value_length>-1</value_length>
      <value_precision>-1</value_precision>
      <replace_field/>
    </formula>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>192</xloc>
      <yloc>128</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>test completed?</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>get html</send_true_to>
    <send_false_to>remove fields 2</send_false_to>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>test_status</leftvalue>
        <function>IN LIST</function>
        <rightvalue/>
        <value>
          <name>constant</name>
          <type>String</type>
          <text>FAILED;PASSED;PASSED_MANUAL</text>
          <length>-1</length>
          <precision>-1</precision>
          <isnull>N</isnull>
          <mask/>
        </value>
      </condition>
    </compare>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>576</xloc>
      <yloc>320</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>test id, out path</name>
    <type>Calculator</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <failIfNoFile>Y</failIfNoFile>
    <calculation>
      <field_name>test_id</field_name>
      <calc_type>SUBSTITUTE_VARIABLE</calc_type>
      <field_a>test_name</field_a>
      <field_b/>
      <field_c/>
      <value_type>String</value_type>
      <value_length>-1</value_length>
      <value_precision>-1</value_precision>
      <remove>N</remove>
      <conversion_mask/>
      <decimal_symbol/>
      <grouping_symbol/>
      <currency_symbol/>
    </calculation>
    <calculation>
      <field_name>p1</field_name>
      <calc_type>CONSTANT</calc_type>
      <field_a>${results_folder}/${endpoint}/</field_a>
      <field_b/>
      <field_c/>
      <value_type>String</value_type>
      <value_length>-1</value_length>
      <value_precision>-1</value_precision>
      <remove>Y</remove>
      <conversion_mask/>
      <decimal_symbol/>
      <grouping_symbol/>
      <currency_symbol/>
    </calculation>
    <calculation>
      <field_name>p2</field_name>
      <calc_type>SUBSTITUTE_VARIABLE</calc_type>
      <field_a>p1</field_a>
      <field_b/>
      <field_c/>
      <value_type>String</value_type>
      <value_length>-1</value_length>
      <value_precision>-1</value_precision>
      <remove>Y</remove>
      <conversion_mask/>
      <decimal_symbol/>
      <grouping_symbol/>
      <currency_symbol/>
    </calculation>
    <calculation>
      <field_name>out_path</field_name>
      <calc_type>ADD</calc_type>
      <field_a>p2</field_a>
      <field_b>file_id</field_b>
      <field_c/>
      <value_type>String</value_type>
      <value_length>-1</value_length>
      <value_precision>-1</value_precision>
      <remove>N</remove>
      <conversion_mask/>
      <decimal_symbol/>
      <grouping_symbol/>
      <currency_symbol/>
    </calculation>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>320</xloc>
      <yloc>128</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>upload</name>
    <type>UserDefinedJavaClass</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <definitions>
      <definition>
        <class_type>TRANSFORM_CLASS</class_type>
        <class_name>Processor</class_name>
        <class_source>import inspire.validator.Queue;
import java.io.File;
import org.apache.http.entity.mime.*;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.util.EntityUtils;

public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException
{
	Object[] r = getRow();

	if (r == null) {
		setOutputDone();
		return false;
	}

	r = createOutputRow(r, data.outputRowMeta.size());


	String validatorUrl = getVariable("validator_url", "http://inspire.ec.europa.eu/validator/v2/");
	String uploadPath = getVariable("upload_path", "TestObjects?action=upload");
	Queue queue = Queue.get(Integer.parseInt(getVariable("queue_nr")));

	// Load the file
	String longFileNameString = get(Fields.In, "filename").getString(r);
	File file = new File(longFileNameString);

	// Multipart entity
	MultipartEntityBuilder entity = MultipartEntityBuilder.create();
	//entity.setMode(HttpMultipartMode.STRICT);
	entity.setMode(HttpMultipartMode.BROWSER_COMPATIBLE);
	entity.addBinaryBody("file", file);
	entity.addTextBody("fileName", file.getName());

	// Http post
	HttpPost httpPost = new HttpPost(validatorUrl + uploadPath);
	httpPost.setConfig(queue.config);
	httpPost.setEntity(entity.build());

	int tries = 0;
	int maxTries = 12;
	boolean success = false;
	do {
		try {
			if (tries > 0)
				Thread.sleep(90 * 1000); // delay 1.5 minutes

			logBasic("Uploading " + longFileNameString); 
			logDetailed("Requesting " + httpPost.getRequestLine()); 
			CloseableHttpResponse response = queue.client.execute(httpPost);
			try {
				logDetailed(response.getStatusLine().toString());
				if (response.getStatusLine().getStatusCode() == 200) {
					success = true;
					get(Fields.Out, "response").setValue(r,  EntityUtils.toString(response.getEntity()));
				} else {
					logBasic("Upload FAILED:");
					logBasic(EntityUtils.toString(response.getEntity()));
				}
			} finally {
				response.close();
			}
		} catch (Exception e) {
			logError("Error", e);
		}
	} while (!success &amp;&amp; tries++ &lt; maxTries);

	if (success)
		putRow(data.outputRowMeta, r);
	else {
		putError(data.outputRowMeta, r, tries, "Upload failed", longFileNameString, "");
		queue.decrement();
	}

	return true;
}</class_source>
      </definition>
    </definitions>
    <fields>
      <field>
        <field_name>response</field_name>
        <field_type>String</field_type>
        <field_length>-1</field_length>
        <field_precision>-1</field_precision>
      </field>
    </fields>
    <clear_result_fields>N</clear_result_fields>
    <info_steps/>
    <target_steps/>
    <usage_parameters/>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>576</xloc>
      <yloc>128</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step_error_handling>
    <error>
      <source_step>get html</source_step>
      <target_step>Dummy 3</target_step>
      <is_enabled>Y</is_enabled>
      <nr_valuename/>
      <descriptions_valuename/>
      <fields_valuename/>
      <codes_valuename/>
      <max_errors/>
      <max_pct_errors/>
      <min_pct_rows/>
    </error>
    <error>
      <source_step>run test</source_step>
      <target_step>Dummy 2</target_step>
      <is_enabled>Y</is_enabled>
      <nr_valuename/>
      <descriptions_valuename/>
      <fields_valuename/>
      <codes_valuename/>
      <max_errors/>
      <max_pct_errors/>
      <min_pct_rows/>
    </error>
    <error>
      <source_step>upload</source_step>
      <target_step>Dummy 1</target_step>
      <is_enabled>Y</is_enabled>
      <nr_valuename/>
      <descriptions_valuename/>
      <fields_valuename/>
      <codes_valuename/>
      <max_errors/>
      <max_pct_errors/>
      <min_pct_rows/>
    </error>
  </step_error_handling>
  <slave-step-copy-partition-distribution>
  </slave-step-copy-partition-distribution>
  <slave_transformation>N</slave_transformation>
  <attributes/>
</transformation>
